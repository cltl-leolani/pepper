[DEFAULT]
# Variables for interpolation in multiple modules

# Name of Robot
robot_name: Leolani

# Application Language to use
# Full list of Languages and their formats can be found at
#   https://cloud.google.com/speech-to-text/docs/languages
# Please keep in mind that the internal system is English (en) only
#   Translation happens during Speech-to-Text & Text-to-Speech steps
#   Translation can induce quite a bit of lag in the System
application_lang: en-GB
internal_lang: en-GB

# For values see pepper/__init__.py > CameraResolution enum
cam_resolution: QVGA
cam_frame_rate: 3

# Microphone sample rate (Hz) and number of channels
# NOTE: Fixed at 16000 Hz and 1 Channel (mono)
mic_sample_rate: 16000
mic_channels: 1

obj_recognition_targets: coco, oid

# General Logging
log_file: log.txt

# People Root
people_dir: %(root_dir)s/people
# Root of Robot's "friends"
people_friends_dir: %(people_dir)s/friends

# Root of people Robot has "just met"
people_new_dir: %(people_dir)s/new

# Application Backend to Use (SYSTEM or NAOQI)
backend: system

# Global
dependency_timeout = 10


[pepper.framework.backend.system]
application_language: %(application_lang)s
internal_language: %(internal_lang)s
camera_resolution: %(cam_resolution)s
camera_frame_rate: %(cam_frame_rate)s
microphone_sample_rate: %(mic_sample_rate)s
microphone_channels: %(mic_channels)s


[pepper.framework.backend.naoqi]
# NAOqi Robot URL
ip: 192.168.1.176  # Default WiFi
port: 9559
url: tcp://%(ip)s:%(port)s

application_language: %(application_lang)s
internal_language: %(internal_lang)s
camera_resolution: %(cam_resolution)s
camera_frame_rate: %(cam_frame_rate)s
microphone_sample_rate: %(mic_sample_rate)s
microphone_channels: %(mic_channels)s
microphone_index: front

# TODO configure per application
speech_speed: 80

# NAOqi Specific Overrides
use_system_camera: False
use_system_microphone: False
use_system_text_to_speech: False


[pepper.brain]
# Brain URL (Local GraphDB or Remote Database)
url_local: http://localhost:7200/repositories/leolani
url_remote: http://145.100.58.167:50053/sparql

# Brain Logging
log_dir: backups/brain
log_prefix: brain_log_


[pepper.framework.sensors.vad.webrtc]
microphone_sample_rate: %(mic_sample_rate)s
microphone_channels: %(mic_channels)s

threshold = 0.6

audio_frame_ms = 10
buffer_size = 100
voice_window = 50


[pepper.framework.sensors.asr]
application_language: %(application_lang)s
internal_language: %(internal_lang)s
microphone_sample_rate: %(mic_sample_rate)s


[pepper.framework.sensors.microphone]
sample_rate: %(mic_sample_rate)s
channels: %(mic_channels)s


[pepper.framework.sensors.camera]
# Camera resolution (in pixels) and frame rate (Hz)
# NOTE: Both resolution and frame rate impact system performance...
resolution: %(cam_resolution)s
frame_rate: %(cam_frame_rate)s


[pepper.framework.component.brain]
# local: http://localhost:7200/repositories/leolani
# remote: http://145.100.58.167:50053/sparql
url: http://localhost:7200/repositories/leolani
log_dir: %(root_dir)s/backups/brain


[pepper.framework.component.face]
threshold: 0.3
friends_dir: %(people_friends_dir)s
new_dir: %(people_new_dir)s


[pepper.framework.component.object]
threshold = 0.25

# Set which Object Recognition Backends to use
# NOTE: adding more target is only possible when the backends actually run: see pepper_tensorflow
# NOTE: running multiple targets at once
targets: %(obj_recognition_targets)s


[pepper.framework.component.context]
name: %(robot_name)s
friends_dir: %(people_friends_dir)s
object_recognition_targets: %(obj_recognition_targets)s
conversation_timeout: 30


[pepper.framework.component.subtitles]
name: %(robot_name)s
url: https://bramkraai.github.io/subtitle?text={}
timeout: 15


[pepper.framework.component.statistics]
performance_error_threshold: 0.8
live_speech_timeout: 3
camera_frame_rate: %(cam_frame_rate)s
microphone_sample_rate: %(mic_sample_rate)s


[environment]
GOOGLE_APPLICATION_CREDENTIALS: config/google_cloud_key.json